!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).FxComponents={})}(this,(function(e){"use strict";var t=e.Fx;function s(e){return class extends HTMLElement{constructor(...e){var t,s;super(...e),this.handleScroll=this.handleScroll.bind(this),this.isScrolling=!1,null===(t=this.shadowRoot)||void 0===t||t.addEventListener("scroll",this.handleScroll),this.attachShadow({mode:"open"}),null===(s=this.shadowRoot)||void 0===s||s.appendChild(document.createElement("slot"))}static get observedAttributes(){return["fx-data-speed","fx-data-direction","fx-data-offset"]}connectedCallback(){this.handleScroll(),window.addEventListener("scroll",this.handleScroll)}disconnectedCallback(){window.removeEventListener("scroll",this.handleScroll)}attributeChangedCallback(e,t,s){t!==s&&this.handleScroll()}handleScroll(){this.isScrolling||window.requestAnimationFrame((()=>{this.style.transform=`translateY(${window.scrollY*Number(this.speed)}px)`,this.isScrolling=!1})),this.isScrolling=!0}get speed(){return Number(this.getAttribute("fx-data-speed"))||.5}get direction(){return this.getAttribute("fx-data-direction")||"vertical"}get offset(){return this.getAttribute("fx-data-offset")||0}}}e.Fx=void 0,function(e){e._compose=function(e=HTMLElement,...t){return t.reduce(((e,t)=>t(e)),e)},e._css=function(e,...t){return e.reduce(((e,s,n)=>e+s+(t[n]||"")),"")},e._html=function(e,...t){return new Function("return `"+e.reduce(((e,s,n)=>e+s+(t[n]||"")),"")+"`")()},e._style=function(e){const t=document.createElement("style");return t.textContent=e,t},e._template=function(e){const t=document.createElement("template");return t.innerHTML=e,t},e._uniqId=function(){return Math.random().toString(36).substr(2,9)}}(e.Fx||(e.Fx={}));const n=e.Fx._compose(HTMLElement,s);customElements.define("fx-parallax",n);class o extends HTMLElement{constructor(){super(),this.observers=new Map,this.observeAttributes=this.observeAttributes.bind(this)}connectedCallback(){this.observeAttributes()}observe(e,t,s){const n=new MutationObserver(s);n.observe(e,t),this.observers.set(e,n)}unobserve(e){const t=this.observers.get(e);t&&(t.disconnect(),this.observers.delete(e))}disconnect(){this.observers.forEach((e=>e.disconnect()))}getRecords(){return Array.from(this.observers.values()).flatMap((e=>e.takeRecords()))}observeAttributes(){const e=new MutationObserver((e=>{e.forEach((e=>{"attributes"===e.type&&this.attributeChangedCallback(e.attributeName,e.oldValue,e.target.nodeValue)}))}));null!==this.shadowRoot&&e.observe(this.shadowRoot,{attributes:!0})}attributeChangedCallback(e,t,s){console.log("attributeChangedCallback",e,t,s)}}const i=e=>class extends HTMLElement{static get observedAttributes(){return["fx-neu-radius","fx-neu-shadow-light","fx-neu-shadow-dark","fx-neu-shadow-x","fx-neu-shadow-y","fx-neu-blur"]}static get styles(){return"\n          undefined\n        "}constructor(){super(),this.handleMouseEnter=this.handleMouseEnter.bind(this),this.handleMouseLeave=this.handleMouseLeave.bind(this)}connectedCallback(){this.addEventListener("mouseenter",this.handleMouseEnter),this.addEventListener("mouseleave",this.handleMouseLeave)}disconnectedCallback(){this.removeEventListener("mouseenter",this.handleMouseEnter),this.removeEventListener("mouseleave",this.handleMouseLeave)}handleMouseEnter(){this.style.boxShadow="var(--fx-neu-shadow-light) var(--fx-neu-shadow-x) var(--fx-neu-shadow-y) var(--fx-neu-blur) var(--fx-neu-dark), var(--fx-neu-shadow-dark) var(--fx-neu-shadow-x) var(--fx-neu-shadow-y) var(--fx-neu-blur) var(--fx-neu-light)",this.style.borderRadius="var(--fx-neu-radius)"}handleMouseLeave(){this.style.boxShadow="none",this.style.borderRadius="var(--fx-neu-radius)"}attributeChangedCallback(e,t,s){t!==s&&this.style.setProperty(`--${e}`,s)}},l=t._compose(HTMLElement,i);class r extends(e.Fx._compose(HTMLElement,o)){constructor(){super(),this.attachShadow({mode:"open"}),this.setAttribute("role","card"),this.setInitialContent()}connectedCallback(){this.render(),this.observeAttributes(),this.setInitialContent()}render(){const e=this.shadowRoot;e&&(e.innerHTML=`\n                <style>${r.styles}</style>\n                <div>\n                    <slot name="fx-title" id="fx-title"></slot>\n                    <slot name="fx-description" id="fx-description"></slot>\n                    <slot name="fx-actions"></slot>\n                </div>\n            `)}attributeChangedCallback(e,t,s){const n=this.shadowRoot;if(n){if(new MutationObserver((()=>{})).observe(n,{attributes:!0}),t!==s)switch(e){case"fx-title":n.getElementById("fx-title").textContent=s;break;case"fx-description":n.getElementById("fx-description").textContent=s}}}setInitialContent(){var e,t;this.hasAttribute("role")||this.setAttribute("role","card"),this.hasAttribute("fx-title")||this.setAttribute("fx-title","fx-title"),this.hasAttribute("fx-description")||this.setAttribute("fx-description","fx-description");const s=null===(e=null==this?void 0:this.shadowRoot)||void 0===e?void 0:e.getElementById("fx-title"),n=null===(t=null==this?void 0:this.shadowRoot)||void 0===t?void 0:t.getElementById("fx-description");s&&(s.textContent=this.getAttribute("fx-title")),n&&(n.textContent=this.getAttribute("fx-description"))}}function a(e){return class extends HTMLElement{constructor(...e){super(...e),this.handleMouseEnter=this.handleMouseEnter.bind(this),this.handleMouseLeave=this.handleMouseLeave.bind(this)}connectedCallback(){this.tooltip=document.createElement("div"),this.tooltip.className="fx-data-tooltip",this.tooltip.textContent=this.getAttribute("fx-data-tooltip"),this.tooltip.style.position="absolute",this.tooltip.style.zIndex="1",this.tooltip.style.display="none",this.appendChild(this.tooltip),this.addEventListener("mouseenter",this.handleMouseEnter),this.addEventListener("mouseleave",this.handleMouseLeave)}disconnectedCallback(){this.removeChild(this.tooltip),this.removeEventListener("mouseenter",this.handleMouseEnter),this.removeEventListener("mouseleave",this.handleMouseLeave)}handleMouseEnter(){this.tooltip.style.display="block"}handleMouseLeave(){this.tooltip.style.display="none"}static get observedAttributes(){return["fx-data-tooltip"]}}}r.styles="\n        undefined\n    ",customElements.define("fx-card",r);const d=e.Fx._compose(HTMLElement,a);customElements.define("fx-tooltip",d);function h(e){return class extends e{constructor(...e){super(...e),this.attachShadow({mode:"open"}),this.shadow.innerHTML='\n                <style>\n                    undefined    \n                </style>\n                <div class="fx-modal">\n                    <div class="fx-modal-content">\n                        <span class="fx-close">&times;</span>\n                        <slot></slot>\n                    </div>\n                </div>\n            ',this.closeButton=this.shadow.querySelector(".fx-close"),this.modal=this.shadow.querySelector(".fx-modal"),this.closeButton.addEventListener("click",this.close.bind(this))}open(){this.modal.style.display="block"}close(){this.modal.style.display="none"}}}const u=e.Fx._compose(HTMLElement,h);customElements.define("fx-modal",u),e.FxCard=r,e.FxModalMixin=h,e.FxNeu=l,e.FxNeuElement=l,e.FxNeuromorphicMixin=i,e.FxObserver=o,e.FxParallaxElement=n,e.FxParallaxMixin=s,e.FxTooltipElement=d,e.FxTooltipMixin=a}));
//# sourceMappingURL=fx-components.umd.js.map
